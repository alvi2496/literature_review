% Encoding: UTF-8
%
% Turn off URLs (from https://tex.stackexchange.com/a/268987)
@IEEEtranBSTCTL{MyBSTcontrol,
	CTLuse_url = "no",
}

@Inproceedings{marin-2017-what,
  author      = {Litoiu, Marin and Shaw, Mary and Tamura, Gabriel and Villegas, Norha M. and M{\"u}ller, Hausi A. and Giese, Holger and Rouvoy, Romain and Rutten, Eric},
  title       = {What Can Control Theory Teach Us About Assurances in Self-Adaptive Software Systems?},
  booktitle   = {Software Engineering for Self-Adaptive Systems III. Assurances},
  pages       = {90--134},
  year        = {2017},
  doi         = {10.1007/978-3-319-74183-3_4},
  isbn        = {978-3-319-74183-3},
  publisher   = {Springer},
  editor      = {de Lemos, Rog{\'e}rio and Garlan, David and Ghezzi, Carlo and Giese, Holger},
  abstract    = {Self-adaptive software (SAS) systems monitor their own behavior and autonomously make dynamic adjustments to maintain desired properties in response to changes in the systems' operational contexts. Control theory provides verifiable feedback models to realize this kind of autonomous control for a broad class of systems for which precise quantitative or logical discrete models can be defined. Recent MAPE-K models, along with variants such as the hierarchical ACRA, address a broader range of tasks. However, they do not provide the inherent assurance mechanisms that control theory does, as they do not explicitly identify and establish the properties that reliable controllers should have. These properties, in general, result not from the abstract models, but from the specifics of control strategies, which are precisely what these models fail to analyze. We show that, even for systems too complex for direct application of classical control theory, the abstractions of control theory provide design guidance that identifies important control characteristics and raises critical design issues about the details of the strategy that determine the controllability of the resulting systems. This in turn enables careful reasoning about whether the control characteristics are in fact achieved. In this chapter we examine the control theory approach, explain several control strategies illustrated with examples from both domains, classical control theory and SAS, and show how the issues addressed by these strategies can and should be seriously considered for the assurance of self-adaptive software systems. From this examination we distill challenges for developing principles that may serve as the basis of a control theory for the assurance of self-adaptive software systems.},
}
